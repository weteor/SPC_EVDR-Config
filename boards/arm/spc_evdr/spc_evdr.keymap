/*
 * Copyright (c) 2022 weteor
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define SYM_L 2
#define NAV_L 3
#define NUM_L 4
#define CFG_L 5
#define BLE_L 6

// repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_slash {
            timeout-ms = <50>;
            key-positions = <1 11>;
            layers = <BAS_L>;
            bindings = <&kp SLASH>;
            };
        combo_lBracket {
            timeout-ms = <50>;
            key-positions = <2 12>;
            layers = <BAS_L>;
            bindings = <&kp LEFT_BRACKET>;
            };
        combo_lBrace {
            timeout-ms = <50>;
            key-positions = <3 13>;
            layers = <BAS_L>;
            bindings = <&kp LEFT_BRACE>;
            };
        combo_lParanthesis {
            timeout-ms = <50>;
            key-positions = <4 14>;
            layers = <BAS_L>;
            bindings = <&kp LEFT_PARENTHESIS>;
            };
        combo_equal {
            timeout-ms = <50>;
            key-positions = <5 15>;
            layers = <BAS_L>;
            bindings = <&kp EQUAL>;
            };

        combo_asterix {
            timeout-ms = <50>;
            key-positions = <6 16>;
            layers = <BAS_L>;
            bindings = <&kp ASTERISK>;
            };

        combo_rParanthesis {
            timeout-ms = <50>;
            key-positions = <7 17>;
            layers = <BAS_L>;
            bindings = <&kp RIGHT_PARENTHESIS>;
            };
        combo_rBrace {
            timeout-ms = <50>;
            key-positions = <8 18>;
            layers = <BAS_L>;
            bindings = <&kp RIGHT_BRACE>;
            };
        combo_rBracket {
            timeout-ms = <50>;
            key-positions = <9 19>;
            layers = <BAS_L>;
            bindings = <&kp RIGHT_BRACKET>;
            };
        combo_bSlash {
            timeout-ms = <50>;
            key-positions = <10 20>;
            layers = <BAS_L>;
            bindings = <&kp BACKSLASH>;
            };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp TAB>;
            };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
            };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESCAPE>;
            };

        combo_cfgLayer {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&mo CFG_L>;
            };

        combo_capsWord {
            timeout-ms = <50>;
            key-positions = <23 29>;
            bindings = <&caps_word>;
            };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <180>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    
// COMBOS
// vertical
// -------------------------------     -------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  | 
// |  /  |  [  |  {  |  (  |  =  |     |  *  |  )  |  }  |  ]  |  \  |  
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  '  | 
//
// others:
// Q + W - escape
// W + E - tab
// I + O - backspace
// C + , - word caps
// both left bottom keys -> Layer CFG

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = " Base";
// -------------------------------     -------------------------------
// |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  | 
// |A sft|S win|D alt|F ctl|  G  |  H  |J ctl|K alt|L win|' sft| 
// |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  ;  | 
// |     |     |xxxxx| Nav | Spc/| Ent | Sym |xxxxx|     |     |
//                           Num
// -------------------------------     -------------------------------
            bindings = <
                &kp C_MUTE
                &kp Q       &kp W       &kp E       &kp R       &kp T     &kp Y       &kp U       &kp I       &kp O       &kp P
                &hm LSHFT A &hm LGUI S  &hm LALT D  &hm LCTRL F &kp G     &kp H       &hm RCTRL J &hm RALT K  &hm RGUI L  &hm RSHFT QUOT
                &kp Z       &kp X       &kp C       &kp V       &kp B     &kp N       &kp M       &kp COMMA   &kp DOT     &kp SEMI
//                &none       &none           &lt NUM_L SPACE       &mo NAV_L           &lt SYM_L RET         &none       &none
                &none       &none                &mo NAV_L   &lt NUM_L SPACE   &kp RET     &mo SYM_L              &none       &none 
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        
        sym_layer {
            label = " Symbol";
// -------------------------------     -------------------------------
// |  `  |  ^  |  @  |  $  |  ~  |  -  |     |     |     |     |     | 
// |  &  |  !  |  +  |  _  |  #  |     |pg up| ctrl| ralt| gui | sft | 
// |  |  |  ?  |  -  |  %  |     |  -  |pg dn|     |     |     |     | 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &kp C_MUTE 
                &kp GRAVE   &kp CARET   &kp AT      &kp DOLLAR  &kp TILDE               &none       &none       &none       &none       &none
                &kp AMPS    &kp EXCL    &kp PLUS    &kp UNDER   &kp HASH                &kp PG_UP   &kp RCTRL   &kp RALT    &kp RGUI    &kp RSHFT
                &kp PIPE    &kp QMARK   &kp MINUS   &kp PERCENT &none                   &kp PG_DN   &none       &none       &none       &none
                &none       &none                   &none       &none                   &none       &none                   &none       &none 
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
        
        nav_layer {
            label = " Navigation";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  |     |pg dn| up  |pg up| del | 
// | sft | gui | alt | ctrl|     |     |home |left |down |right| end | 
// |     |     |     |     |     |  -  |     |prev | play|stop | next| 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &kp C_MUTE 
                &none       &none       &none       &none       &none                   &none       &kp PG_UP   &kp UP      &kp PG_DN   &kp DEL
                &kp LSHFT   &kp LGUI    &kp LALT    &kp LCTRL   &none                   &kp HOME    &kp LEFT    &kp DOWN    &kp RIGHT   &kp END
                &none       &none       &none       &none       &none                   &none       &none       &none       &none       &none
                &none       &none                   &none       &none                   &none       &none                   &none       &none 
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        num_layer {
            label = " Numbers and F-Keys";
// -------------------------------     -------------------------------
// |     |  F9 | F10 | F11 | F12 |  -  |  +  | num7| num8| num9|  /  | 
// |     |  F5 |  F6 |  F7 |  F8 |     |  0  | num4| num5| num6|  .  | 
// |     |  F1 |  F2 |  F3 |  F4 |  -  |  -  | num1| num2| num3|  *  | 
// |     |     |xxxxx|     |     |     |  =  | ent |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &kp C_MUTE 
                &none       &kp F9      &kp F10     &kp F11     &kp F12                 &kp KP_PLUS &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_SLASH 
                &none       &kp F5      &kp F6      &kp F7      &kp F8                  &kp KP_N0   &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_DOT
                &none       &kp F1      &kp F2      &kp F3      &kp F4                  &kp KP_MINUS &kp KP_N1  &kp KP_N2   &kp KP_N3   &kp KP_MULTIPLY
                &none       &none                   &none       &none                   &kp KP_EQUAL &kp KP_ENTER           &none       &none 
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
        
        cfg_layer {
            label = " Configuration";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  | USB | BLE |     |     |BTCLR| 
// |     |     |     |     |     |     |     |     |     |     |     | 
// |numlk|PSCRN|     |     |     |  -  | BT0 | BT1 | BT2 | BT3 | BT4 | 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &none
                &kp C       &none       &reset       &none       &bootloader               &out OUT_USB &out OUT_BLE &none        &none        &bt BT_CLR
                &none       &none       &none        &none         &none                   &none        &none        &none        &none        &none
                &kp KP_NUM  &kp PSCRN   &none        &none         &none                   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                &none       &none                    &none         &none                   &none        &none                     &none        &none 
            >;
        };
    };
};


